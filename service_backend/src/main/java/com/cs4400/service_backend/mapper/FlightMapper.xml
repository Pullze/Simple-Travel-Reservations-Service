<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cs4400.service_backend.mapper.FlightMapper">
    <select id = "check_flight" resultType = "FlightInfo">
        select  * from Flight
            where Flight_Num = #{flight_num} and Airline_Name = #{airline_name};
    </select>

    <insert id = "schedule_flight">
    insert into Flight (Flight_Num, Airline_Name, From_Airport, To_Airport, Departure_Time,  Arrival_Time, Flight_Date,
                        Cost, Capacity)
    values (#{flight_num}, #{airline_name}, #{from_airport}, #{to_airport}, #{departure_time}, #{arrival_time},
             #{flight_date}, #{cost}, #{capacity});
    </insert>

    <select id = "check_airport" resultType = "Airport">
            select * from Airport
                where Airport_Id = #{airport_id};
    </select>

    <select id = "view_flight" resultType= "Flight">
        select
        f.Flight_Num,
        f.Airline_Name,
        Departure_Time,
        Arrival_Time,
		Flight_Date,
		Cost,
        From_Airport,
        To_Airport,
        Capacity - coalesce(SUM(b.Num_Seats * (1 - b.Was_Cancelled)), 0) as remaining_seats,
		cost * coalesce(SUM(b.Num_Seats * (1 - 0.8 * b.Was_Cancelled)), 0) as total_spent
		from flight as f left join book as b on
        b.Airline_Name = f.Airline_Name and b.Flight_Num = f.Flight_Num
		group by f.Airline_Name , f.Flight_Num
		having remaining_seats >= #{minSeats};
    </select>


    <select id = "check_book_cancelled" resultType="Book">
        select * from Book
        where Flight_Num = #{flight_num} and Airline_Name = %{airline_name} and Customer = customer_email and Was_Cancelled = 1;
    </select>

    <select id = "check_if_booked_flight" resultType="Book">
        select * from Book
        where Flight_Num = #{flight_num} and Airline_Name = %{airline_name} and Customer = customer_email and Was_Cancelled = 0;
    </select>

    <select id = "check_flight_seats" resultType = "Integer">
        select Capacity - coalesce(sum(b.Num_seats), 0) as remaining_seats
        from Book as b right join Flight as f on
		b.Flight_Num = f.Flight_Num and b.Airline_Name = f.Airline_Name
		where Flight_Num = #{flight_num} and Airline_Name = %{airline_name} and Was_Cancelled = 0
		group by Flight_Num;
    </select>

    <select id = "check_book_by_date" resultType = "Book">
        select Customer from Book natural join Flight where Customer = #{customer_email} and Flight_Date = #{flight_date};
    </select>

    <update id = "update_book">
        update Book set Num_Seats = Num_seats + #{num_seats} where Customer = #{customer_email} and Flight_Num = #{flight_num}  and Airline_Name = #{airline_name};
    </update>


    <select id = "check_bookInfo" resultType = "BookInfo">
       select Customer, Flight_Num, Airline_Name, Num_Seats, #{seats_booked} as seats_booked, Cost * #{seats_booked} as book_cost, Cost * Num_Seats as total_cost
      from Book natural join Flight where Customer = #{customer_email} and Flight_Num = #{flight_num} and Airline_Name = %{airline_name};
    </select>




    <insert id = "book_new_flight" >
        insert into Book(Customer, Flight_Num, Airline_Name, Num_Seats, Was_Cancelled)
        values (#{customer_email}, #{flight_num}, #{airline_name}, #{num_seats}, 0);
    </insert>



</mapper>