<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cs4400.service_backend.mapper.PropertyMapper">
    <select id = "viewProperties" resultType = "Property">
        select
            p.Property_Name,
            p.Owner_Email,
            p.Descr,
            AVG(r.Score) as rating,
            p.Capacity,
            p.Cost,
            concat(p.Street, ',', p.City, '，', p.State, '，', p.Zip) as address
        from property as p
                 left join review as r on p.Property_Name = r.Property_Name
        where p.Capacity >= #{low} and p.Capacity &lt;= #{high}
        group by p.Property_Name;
    </select>

    <select id = "checkAmenities" resultType = "String">
        select Amenity_Name from Amenity where Property_Name = #{property_name} and Property_Owner = #{property_owner};
    </select>

<!--check constraints: available seats > 0 -->
    <select id = "viewAvailableProperties" resultType = "Property">
        select p.Property_Name, p.Owner_Email, ifnull(p.capacity - reserved_seats, p.capacity) as capacity, p.Cost
        from property as p
            left join (select Property_name, Owner_Email, sum(Num_Guests) as reserved_Seats
                        from reserve where Was_Cancelled = 0 and Start_Date >= #{start} and End_Date &lt;= #{end}
                        group by Property_name, Owner_Email) as r
            on p.Property_Name = r.Property_Name and p.Owner_Email = r.Owner_Email
        where ifnull(r.reserved_seats, 0) &lt; p.capacity;
    </select>

<!--    check the propertyName, ownerEmail, Customer unique in the system. return property for bad request. -->
    <select id = "checkReserveExist" resultType = "Reserve">
        select * from reserve
            where Property_Name = #{propertyName} and Owner_Email = #{ownerEmail} and Customer = #{customerEmail};
    </select>

    <!--    check the property reserve overlap with previous reserve for other properties. return property if overlap -->
    <select id = "checkReserveCondition" resultType = "Reserve">
        select * from reserve
        where Customer = #{customerEmail} and
              ((Start_Date between #{startDate} and #{endDate}) or (End_Date between #{startDate} and #{endDate})
                   or (Start_Date &lt;= #{startDate} and End_Date > #{endDate}));
    </select>

    <insert id="reserveProperty">
        insert into Reserve
            (Property_Name, Owner_Email, Customer, Start_Date, End_Date, Num_Guests, Was_Cancelled)
            values (#{propertyName}, #{ownerEmail}, #{customerEmail}, #{startDate}, #{endDate}, #{numGuests}, 0);
    </insert>


    <select id = "viewCustomerFutureReservations" resultType = "com.cs4400.service_backend.vo.ReserveInfo">
        select r.Start_Date as startDate, p.Property_Name as propertyName, p.Owner_Email as ownerEmail, concat(p.Street, ',', p.City, ',', p.State, ',', p.Zip) as address
        from reserve as r, property as p
        where r.Property_Name = p.Property_Name and r.Owner_Email = p.Owner_Email and r.Start_Date > CURDATE() and r.Customer = #{customerEmail};
    </select>

    <select id="check_owner_has_property" resultType="Boolean">
        select exists(select * from Property where Owner_Email = #{email});
    </select>

</mapper>
